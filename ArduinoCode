// define pin thingies on arduino
const int trigPin = 13;
const int echoPin = 12;

const int buzzer = 11; 

const int greenLED = 10;
const int yellowLED  = 9;
const int redLED = 8;

long duration;
double distance;


int noteFrequencies[] = {131, 147, 165, 175, 196, 220, 247, 262, 294, 330, 249, 392, 440, 494, 523};
double noteDistances[] = {1.5, 2.25, 3, 3.75, 4.5, 5.25, 6, 6.75, 7.5, 8.25, 9, 9.75, 10.5, 11.25, 12};


void setup() {
  // define all outputs and inputs
  pinMode(trigPin, OUTPUT); 
  pinMode(echoPin, INPUT); 
  pinMode(buzzer, OUTPUT);
  pinMode(greenLED, OUTPUT);
  pinMode(yellowLED, OUTPUT);
  pinMode(redLED, OUTPUT);

  // Set everything low initially
  digitalWrite(buzzer, LOW);
  digitalWrite(greenLED, LOW);
  digitalWrite(yellowLED, LOW);
  digitalWrite(redLED, LOW);

  Serial.begin(9600); 

}


void loop() {
  // reset sensor
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  
  // distance in inches
  distance = duration * 0.034 / 2 / 2.54;



  if(distance < 13){
     digitalWrite(greenLED, HIGH);
  } else{
     digitalWrite(greenLED, LOW);
     digitalWrite(yellowLED, LOW);
  }
  
  if (distance < 8) {
     digitalWrite(yellowLED, HIGH);
  } else{
     digitalWrite(yellowLED, LOW);
  }
  
  if (distance < 4) {
      digitalWrite(redLED, HIGH);
  } else{
     digitalWrite(redLED, LOW);
  }


   int note = -1;
   for (int i = 0; i < 16; i++) {
    if (distance < noteDistances[i]) {
      note = noteFrequencies[i];
      break;
    }
   }

   if (note != -1) {
    tone(buzzer, note, 100);
    Serial.print("Distance");
    Serial.print(distance);
    Serial.println("");
    Serial.print("Note");
    Serial.print(note);
   } else {
    noTone(buzzer);
   }

   delay(80);
}
